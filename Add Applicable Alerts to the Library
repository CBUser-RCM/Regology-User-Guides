<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Regology: Add Applicable Alerts Guide</title>
    <!-- Load Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom Regology Purple Theme */
        .regology-purple {
            background-color: #6A1B9A; /* Deep Purple */
            color: white;
        }
        .regology-border {
            border-color: #6A1B9A;
        }
        .regology-text {
            color: #6A1B9A;
        }
        .interactive-highlight {
            cursor: pointer;
            text-decoration: underline;
            font-weight: 700;
        }
        .alert-box {
            border-left: 4px solid #FBC02D; /* Amber for warning/note */
        }
        /* Styling for embedded screenshots */
        .screenshot {
            width: 100%;
            max-width: 600px;
            height: auto;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
            border: 1px solid #ddd;
            margin: 16px auto;
            display: block;
        }
    </style>
</head>
<body class="min-h-screen bg-gray-100 font-sans antialiased flex items-center justify-center p-4">

    <div id="guide-container" class="w-full max-w-4xl bg-white shadow-2xl rounded-xl overflow-hidden">
        
        <!-- Header -->
        <header class="regology-purple p-4 sm:p-6">
            <h1 class="text-2xl sm:text-3xl font-bold">Coinbase Regology Training</h1>
            <h2 class="text-sm sm:text-md opacity-90 mt-1">Adding Applicable Alerts to the Library &mdash; July 29, 2025</h2>
        </header>

        <!-- Content Area -->
        <main class="p-6 sm:p-10">
            <div id="step-content">
                <!-- Content injected here by JavaScript -->
            </div>
        </main>

        <!-- Navigation Footer -->
        <footer class="p-4 sm:p-6 border-t border-gray-200 flex justify-between">
            <button id="prev-btn" onclick="prevStep()" class="bg-gray-300 text-gray-800 px-4 py-2 rounded-lg font-medium shadow hover:bg-gray-400 transition" disabled>
                &larr; Previous
            </button>
            <button id="next-btn" onclick="nextStep()" class="regology-purple px-4 py-2 rounded-lg font-medium shadow-md hover:opacity-90 transition">
                Next &rarr;
            </button>
        </footer>
    </div>

    <!-- Message Modal for interactions (e.g., Hotspots, Quiz Feedback) -->
    <div id="modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white p-6 rounded-xl max-w-sm mx-4 shadow-xl border-t-4 regology-border">
            <h3 id="modal-title" class="text-xl font-bold mb-3 regology-text">Alert Criteria Tip</h3>
            <p id="modal-body" class="text-gray-700"></p>
            <button onclick="closeModal()" class="mt-4 regology-purple px-4 py-2 rounded-lg font-medium hover:opacity-90 transition">
                Got it!
            </button>
        </div>
    </div>

    <script>
        let currentStep = 0;
        
        // Define the deep purple color for dynamic use
        const PURPLE_COLOR = '#6A1B9A';

        // Helper function to show the modal
        function showModal(title, body) {
            document.getElementById('modal-title').textContent = title;
            document.getElementById('modal-body').innerHTML = body;
            document.getElementById('modal').classList.remove('hidden');
            document.getElementById('modal').classList.add('flex');
        }

        // Helper function to close the modal
        function closeModal() {
            document.getElementById('modal').classList.remove('flex');
            document.getElementById('modal').classList.add('hidden');
            // Check if closing the modal should enable navigation (e.g., after an essential interaction)
            if (steps[currentStep].interactionRequired) {
                document.getElementById('next-btn').disabled = false;
                document.getElementById('next-btn').classList.remove('bg-gray-300', 'text-gray-800');
                document.getElementById('next-btn').classList.add('regology-purple');
                steps[currentStep].interactionRequired = false; // Mark interaction as complete
            }
        }

        const steps = [
            // Step 0: Introduction
            {
                title: "Welcome to the Guide",
                content: `
                    <h3 class="text-3xl font-extrabold mb-6 regology-text">Coinbase Regology Training</h3>
                    <p class="text-lg mb-4">This guide will walk you through the new functionality for adding **Applicable Alerts** directly into the **LRO Inventory** within Coinbase Regology.</p>
                    <p class="text-md mb-8 p-3 border alert-box bg-yellow-50 text-gray-700">Click start to begin</p>
                    <div class="flex justify-center mt-10">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-20 h-20 regology-text" viewBox="0 0 24 24" fill="none" stroke="${PURPLE_COLOR}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polygon points="5 3 19 12 5 21 5 3"></polygon></svg>
                    </div>
                `,
                interactionRequired: false,
                onEnter: () => {
                    // Rename the next button to 'Start'
                    document.getElementById('next-btn').textContent = 'Start \u2192';
                }
            },
            // Step 1: Identify and Initiate
            {
                title: "Step 1: Identify and Initiate the Addition",
                content: `
                    <p class="text-lg mb-4">This function is used when LROs are **final law** but are **not yet part of the Coinbase Regology LRO Inventory**.</p>
                    
                    <img src="uploaded:alert_detail.png-fc63f814-6fc6-4f1b-9b55-c9350db68792" class="screenshot" alt="Alert Detail Screen showing 'Became Law' status and 'Add to Library' button" />
                    
                    <p class="text-md alert-box p-3 bg-gray-50 text-gray-700 mb-4">The button to add the alert to the inventory will only appear if the status is **“Became Law”** or **“Final Rule.”** <br> Use your judgment, but if Applicable, the alert should likely be added.</p>
                    
                    <img src="uploaded:step1_add_to_library.png-e59e63d3-ab92-4548-bd55-bd64ae77fb10" class="screenshot max-w-sm" alt="Add to Library Step 1 of 4 prompt" />

                    <p class="text-md mt-4">**Click the highlighted text above** to review the criteria for when to add an alert to the library.</p>
                    <span id="status-criteria" class="interactive-highlight border-b-2 border-dashed border-gray-500 hidden" onclick="triggerCriteriaModal()">Became Law or Final Rule</span>

                `,
                interactionRequired: true,
                onEnter: () => {
                    document.getElementById('next-btn').disabled = true;
                    document.getElementById('next-btn').classList.remove('regology-purple');
                    document.getElementById('next-btn').classList.add('bg-gray-300', 'text-gray-800');
                    // Show hidden text for interaction
                    document.getElementById('status-criteria').classList.remove('hidden');
                    
                    window.triggerCriteriaModal = () => {
                        showModal('Alert Criteria Tip', 'Use this functionality when the LRO is considered **final law**. The system enforces this by only showing the button if the alert status is **"Became Law"** or **"Final Rule."** Use your judgment, but if Applicable, the alert should be added.');
                    };
                }
            },
            // Step 2: Complete Mandatory Metadata
            {
                title: "Step 2: Complete Mandatory Metadata Entry (Step 1 of 4)",
                content: `
                    <p class="text-lg mb-4">After clicking **"Add to Inventory,"** you are prompted to fill out all required Metadata. **For this training, all fields are considered mandatory** to ensure complete, high-quality entries.</p>
                    
                    <p class="text-sm text-red-600 mt-2 p-3 bg-red-100 rounded-md mb-4">
                        **Training Mandate:** Even if Regology allows skipping, you must complete all fields. We are working with the Regology team to enforce these fields in the backend.
                    </p>

                    <div class="mock-screenshot">
                        <div class="text-xl font-semibold regology-text mb-4">Mock Metadata View (1 of 4)</div>
                        <div class="grid grid-cols-2 gap-4">
                            <div><label class="block text-sm font-medium text-gray-700">Title <span class="text-red-500">*</span></label><input type="text" class="mt-1 block w-full border border-gray-300 rounded-md p-2" value="SEC Final Rule Name" disabled></div>
                            <div><label class="block text-sm font-medium text-gray-700">Effective Date <span class="text-red-500">*</span></label><input type="date" class="mt-1 block w-full border border-gray-300 rounded-md p-2" value="2025-09-01" disabled></div>
                            <div class="col-span-2"><label class="block text-sm font-medium text-gray-700">Summary <span class="text-red-500">*</span></label><textarea class="mt-1 block w-full border border-gray-300 rounded-md p-2" rows="2" disabled>A concise summary of the LRO's content.</textarea></div>
                            <div><label class="block text-sm font-medium text-gray-700">Citation Link <span class="text-red-500">*</span></label><input type="url" class="mt-1 block w-full border border-gray-300 rounded-md p-2" value="https://sec.gov/final-rule-xyz" disabled></div>
                        </div>
                    </div>
                `,
                interactionRequired: false,
                onEnter: () => {}
            },
            // Step 3: Define Workflow Status and Topics
            {
                title: "Step 3: Define Workflow Status and Topics (Steps 2 & 3 of 4)",
                content: `
                    <p class="text-lg mb-4">The next two steps define the document's workflow status and classification.</p>
                    
                    <img src="uploaded:step2_workflow_status.png-0366d629-cd0b-4aef-ac7f-bfabd8c38cfd" class="screenshot max-w-sm" alt="Select Workflow Status screen showing Applicable and Following options" />
                    
                    <p class="text-md alert-box p-3 bg-gray-50 text-gray-700 mb-4">For LRO Inventory additions, you **must** select **"Applicable."** <br> **Click the 'Applicable' status below** to confirm your choice before proceeding.</p>

                    <h4 class="font-bold text-gray-800 mb-2">Select Workflow Status:</h4>
                    <div class="flex space-x-4 mb-4">
                        <div class="border border-gray-300 p-3 rounded-md cursor-pointer hover:bg-red-50 transition" onclick="quizAnswer('Following')">Following (Wrong)</div>
                        <div id="applicable-option" class="border-2 border-green-600 bg-green-50 p-3 rounded-md cursor-pointer transition font-semibold" onclick="quizAnswer('Applicable')">Applicable</div>
                    </div>
                    
                    <img src="uploaded:step3_topic_mapping.png-0c1dc6e0-799f-4c6c-85c6-aa5a354c1d8a" class="screenshot max-w-sm" alt="Topic(s) Mapping screen" />
                    <p class="text-sm text-gray-600 mt-2">Topic(s) Mapping is **Optional** but recommended for proper categorization.</p>

                `,
                interactionRequired: true,
                onEnter: () => {
                    document.getElementById('next-btn').disabled = true;
                    document.getElementById('next-btn').classList.remove('regology-purple');
                    document.getElementById('next-btn').classList.add('bg-gray-300', 'text-gray-800');
                    window.quizAnswer = (selection) => {
                        if (selection === 'Applicable') {
                            showModal('Correct!', 'Selecting **Applicable** is mandatory for LRO Inventory additions.');
                            document.getElementById('applicable-option').classList.add('bg-green-100');
                        } else {
                            showModal('Try Again', 'For LRO Inventory additions, the status **must be "Applicable"**.');
                        }
                    };
                }
            },
            // Step 4: Assign Owners and Submit
            {
                title: "Step 4: Assign Owners and Submit (Step 4 of 4)",
                content: `
                    <p class="text-lg mb-4">This is the final step before the approval queue.</p>
                    
                    <img src="uploaded:step4_assign_owners.png-3a5d0e85-0f37-4524-82dc-cf787049787e" class="screenshot max-w-sm" alt="Assign Owners screen showing selection for Stephanie Holstein and Global Employment" />
                    
                    <p class="text-md alert-box p-3 bg-gray-50 text-gray-700 mb-4">Assigning owners is **Optional** but should be done based on internal coverage and tracking needs (e.g., Global Employment). Click **"Finish Adding"** on the screen to submit.</p>
                `,
                interactionRequired: false,
                onEnter: () => {}
            },
            // Step 5: Submission Success and Verification
            {
                title: "Step 5: Submission Success and Verification",
                content: `
                    <h3 class="text-3xl font-extrabold text-green-600 mb-4 flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8 mr-2" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>
                        Submission Successful! 🎉
                    </h3>
                    <p class="text-lg mb-4">The alert has been submitted for review. Its status immediately updates to **“Awaiting Approval.”**</p>
                    
                    <div class="mock-screenshot mb-6">
                        <div class="text-xl font-semibold regology-text mb-4">Approval Process & Verification</div>
                        <p class="text-md mb-2">The alert is now in an **approval queue** for RCM to review and ensure all required data is complete.</p>
                        
                        <div class="mt-4 p-3 bg-indigo-100 rounded-lg border border-indigo-300">
                            <h4 class="font-bold text-indigo-800">Verification Trail:</h4>
                            <p class="text-sm text-indigo-700">To check the status, navigate to: **My Work** &gt; **Authority Documents** &gt; **Sent For Review** tab.</p>
                        </div>
                    </div>

                    <img src="uploaded:sent_for_review_tab.png-dc48fa69-dac0-44b5-a602-620f0980ecd5" class="screenshot" alt="My Work Authority Documents Sent For Review Tab" />
                    
                    <p class="text-md font-bold mt-6 regology-text">You have completed the guide!</p>
                `,
                interactionRequired: false,
                onEnter: () => {
                    // Update the next button for the end screen
                    document.getElementById('next-btn').textContent = 'Finish';
                    document.getElementById('next-btn').classList.remove('regology-purple');
                    document.getElementById('next-btn').classList.add('bg-gray-500', 'text-white');
                }
            },
            // End Step (A dummy step to handle the 'Finish' click)
            {
                title: "Guide Complete",
                content: "<h3 class='text-3xl font-extrabold text-green-600 mb-4'>Guide Complete!</h3><p class='text-lg'>Thank you for completing the Coinbase Regology Alert Addition Training. You can now close this guide.</p>",
                interactionRequired: false,
                onEnter: () => {
                    document.getElementById('next-btn').disabled = true;
                    document.getElementById('prev-btn').disabled = true;
                }
            }
        ];

        function renderStep() {
            const step = steps[currentStep];
            document.getElementById('step-content').innerHTML = `
                <h3 class="text-2xl font-bold mb-4 border-b pb-2 regology-border regology-text">${step.title}</h3>
                <div class="min-h-[400px]">
                    ${step.content}
                </div>
            `;
            
            // Execute onEnter function for specific step logic (like event listeners or button text changes)
            if (step.onEnter) {
                step.onEnter();
            }

            // Handle navigation button states
            const prevBtn = document.getElementById('prev-btn');
            const nextBtn = document.getElementById('next-btn');

            prevBtn.disabled = currentStep === 0 || currentStep === steps.length - 1;
            // Interaction required disables the next button unless the interaction is completed
            nextBtn.disabled = step.interactionRequired; 

            // Style buttons based on state
            if (prevBtn.disabled) {
                prevBtn.classList.add('bg-gray-300', 'text-gray-800');
                prevBtn.classList.remove('regology-purple', 'text-white');
            } else {
                prevBtn.classList.remove('bg-gray-300', 'text-gray-800');
                prevBtn.classList.add('regology-purple', 'text-white');
            }

            if (nextBtn.disabled) {
                nextBtn.classList.remove('regology-purple', 'text-white');
                nextBtn.classList.add('bg-gray-300', 'text-gray-800');
            } else if (currentStep !== 0 && currentStep !== steps.length - 1) {
                // Restore 'Next' text and purple color if not start/end
                nextBtn.textContent = 'Next \u2192';
                nextBtn.classList.remove('bg-gray-500', 'bg-gray-300', 'text-gray-800');
                nextBtn.classList.add('regology-purple', 'text-white');
            }
        }

        function nextStep() {
            if (currentStep < steps.length - 1 && !steps[currentStep].interactionRequired) {
                currentStep++;
                renderStep();
            } else if (currentStep === 0) {
                 // Special handling for 'Start' button
                currentStep++;
                renderStep();
            }
        }

        function prevStep() {
            if (currentStep > 0) {
                currentStep--;
                // If moving back, ensure the interactionRequired flag is reset if necessary
                if (currentStep === 1) {
                    // Re-lock Step 1 if user navigates back to it
                    steps[1].interactionRequired = true; 
                }
                if (currentStep === 3) {
                    // Re-lock Step 3 if user navigates back to it
                    steps[3].interactionRequired = true; 
                }
                renderStep();
            }
        }

        // Initialize the guide
        window.onload = () => {
            renderStep();
        };

    </script>
</body>
</html>
